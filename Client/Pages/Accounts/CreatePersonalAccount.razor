@inherits CreatePersonalAccountBase
@page "/accounts/personal/create"
@page "/accounts/personal/{AccountId:int}/edit"
@using MoneyManager.Models.Domain;



@if (IsNew)
{
    <h1 class="ui header">Create a Personal Account</h1>
}
else
{
    <h1 class="ui header">Edit a Personal Account</h1>
}

<EditForm class="ui form"
          Model=FormModel
          OnValidSubmit=HandleValidSubmit
          Context=editContext>

    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>



    <div class="field required @(IsFormValidString(editContext, () => FormModel.Name))">
        <label>Name</label>
        <InputText @bind-Value=FormModel.Name></InputText>
    </div>

    <div class="field required @(IsFormValidString(editContext, () => FormModel.InitialBalance))">
        <label>Initial balance</label>
        <InputNumber @bind-Value=FormModel.InitialBalance></InputNumber>
    </div>

    <div class="field required @(IsFormValidString(editContext, () => FormModel.Currency))">
        <label>Currency</label>
        <FomanticDropdown TItem=@Currency
                          @bind-SelectedItem=FormModel.Currency
                          PlaceholderText="Select currency"
                          GivenItems=Currencies>
            <SelectedItemTemplate>
                @context.Name
            </SelectedItemTemplate>
        </FomanticDropdown>
    </div>

    <div class="field required @(IsFormValidString(editContext, () => FormModel.InitialDate))">
        <label>Initial balance date</label>
        <InputDate @bind-Value=FormModel.InitialDate></InputDate>
    </div>
    
    <FomanticButton HtmlType=ButtonHtmlTypeEnum.Submit
                    Emphasis=EmphasisEnum.Primary
                    IsLoading=IsSavingAccount>
        @(IsNew ? "Create" : "Save")
    </FomanticButton>

</EditForm>